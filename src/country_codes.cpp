#include "country_codes.hpp"

typedef std::unordered_map<std::string, std::string> StringMap;

CountryCodeMap all_country_codes() {
  StringMap codes;
  codes.insert({ "AF", "Afghanistan"});
  codes.insert({ "AL", "Albania" });
  codes.insert({ "DZ", "Algeria" });
  codes.insert({ "AS", "American Samoa" });
  codes.insert({ "AD", "Andorra" });
  codes.insert({ "AO", "Angola" });
  codes.insert({ "AI", "Anguilla" });
  codes.insert({ "AQ", "Antarctica" });
  codes.insert({ "AG", "Antigua and Barbuda" });
  codes.insert({ "AR", "Argentina" });
  codes.insert({ "AM", "Armenia" });
  codes.insert({ "AW", "Aruba" });
  codes.insert({ "AU", "Australia" });
  codes.insert({ "AT", "Austria" });
  codes.insert({ "AZ", "Azerbaijan" });
  codes.insert({ "BS", "Bahamas" });
  codes.insert({ "BH", "Bahrain" });
  codes.insert({ "BD", "Bangladesh" });
  codes.insert({ "BB", "Barbados" });
  codes.insert({ "BY", "Belarus" });
  codes.insert({ "BE", "Belgium" });
  codes.insert({ "BZ", "Belize" });
  codes.insert({ "BJ", "Benin" });
  codes.insert({ "BM", "Bermuda" });
  codes.insert({ "BT", "Bhutan" });
  codes.insert({ "BO", "Bolivia" });
  codes.insert({ "BA", "Bosnia and Herzegovina" });
  codes.insert({ "BW", "Botswana" });
  codes.insert({ "BV", "Bouvet Island" });
  codes.insert({ "BR", "Brazil" });
  codes.insert({ "BQ", "British Antarctic Territory" });
  codes.insert({ "IO", "British Indian Ocean Territory" });
  codes.insert({ "VG", "British Virgin Islands" });
  codes.insert({ "BN", "Brunei" });
  codes.insert({ "BG", "Bulgaria" });
  codes.insert({ "BF", "Burkina Faso" });
  codes.insert({ "BI", "Burundi" });
  codes.insert({ "KH", "Cambodia" });
  codes.insert({ "CM", "Cameroon" });
  codes.insert({ "CA", "Canada" });
  codes.insert({ "CT", "Canton and Enderbury Islands" });
  codes.insert({ "CV", "Cape Verde" });
  codes.insert({ "KY", "Cayman Islands" });
  codes.insert({ "CF", "Central African Republic" });
  codes.insert({ "TD", "Chad" });
  codes.insert({ "CL", "Chile" });
  codes.insert({ "CN", "China" });
  codes.insert({ "CX", "Christmas Island" });
  codes.insert({ "CC", "Cocos [Keeling] Islands" });
  codes.insert({ "CO", "Colombia" });
  codes.insert({ "KM", "Comoros" });
  codes.insert({ "CG", "Congo - Brazzaville" });
  codes.insert({ "CD", "Congo - Kinshasa" });
  codes.insert({ "CK", "Cook Islands" });
  codes.insert({ "CR", "Costa Rica" });
  codes.insert({ "HR", "Croatia" });
  codes.insert({ "CU", "Cuba" });
  codes.insert({ "CY", "Cyprus" });
  codes.insert({ "CZ", "Czech Republic" });
  codes.insert({ "CI", "Côte d’Ivoire" });
  codes.insert({ "DK", "Denmark" });
  codes.insert({ "DJ", "Djibouti" });
  codes.insert({ "DM", "Dominica" });
  codes.insert({ "DO", "Dominican Republic" });
  codes.insert({ "NQ", "Dronning Maud Land" });
  codes.insert({ "DD", "East Germany" });
  codes.insert({ "EC", "Ecuador" });
  codes.insert({ "EG", "Egypt" });
  codes.insert({ "SV", "El Salvador" });
  codes.insert({ "GQ", "Equatorial Guinea" });
  codes.insert({ "ER", "Eritrea" });
  codes.insert({ "EE", "Estonia" });
  codes.insert({ "ET", "Ethiopia" });
  codes.insert({ "FK", "Falkland Islands" });
  codes.insert({ "FO", "Faroe Islands" });
  codes.insert({ "FJ", "Fiji" });
  codes.insert({ "FI", "Finland" });
  codes.insert({ "FR", "France" });
  codes.insert({ "GF", "French Guiana" });
  codes.insert({ "PF", "French Polynesia" });
  codes.insert({ "TF", "French Southern Territories" });
  codes.insert({ "FQ", "French Southern and Antarctic Territories" });
  codes.insert({ "GA", "Gabon" });
  codes.insert({ "GM", "Gambia" });
  codes.insert({ "GE", "Georgia" });
  codes.insert({ "DE", "Germany" });
  codes.insert({ "GH", "Ghana" });
  codes.insert({ "GI", "Gibraltar" });
  codes.insert({ "GR", "Greece" });
  codes.insert({ "GL", "Greenland" });
  codes.insert({ "GD", "Grenada" });
  codes.insert({ "GP", "Guadeloupe" });
  codes.insert({ "GU", "Guam" });
  codes.insert({ "GT", "Guatemala" });
  codes.insert({ "GG", "Guernsey" });
  codes.insert({ "GN", "Guinea" });
  codes.insert({ "GW", "Guinea-Bissau" });
  codes.insert({ "GY", "Guyana" });
  codes.insert({ "HT", "Haiti" });
  codes.insert({ "HM", "Heard Island and McDonald Islands" });
  codes.insert({ "HN", "Honduras" });
  codes.insert({ "HK", "Hong Kong SAR China" });
  codes.insert({ "HU", "Hungary" });
  codes.insert({ "IS", "Iceland" });
  codes.insert({ "IN", "India" });
  codes.insert({ "ID", "Indonesia" });
  codes.insert({ "IR", "Iran" });
  codes.insert({ "IQ", "Iraq" });
  codes.insert({ "IE", "Ireland" });
  codes.insert({ "IM", "Isle of Man" });
  codes.insert({ "IL", "Israel" });
  codes.insert({ "IT", "Italy" });
  codes.insert({ "JM", "Jamaica" });
  codes.insert({ "JP", "Japan" });
  codes.insert({ "JE", "Jersey" });
  codes.insert({ "JT", "Johnston Island" });
  codes.insert({ "JO", "Jordan" });
  codes.insert({ "KZ", "Kazakhstan" });
  codes.insert({ "KE", "Kenya" });
  codes.insert({ "KI", "Kiribati" });
  codes.insert({ "KW", "Kuwait" });
  codes.insert({ "KG", "Kyrgyzstan" });
  codes.insert({ "LA", "Laos" });
  codes.insert({ "LV", "Latvia" });
  codes.insert({ "LB", "Lebanon" });
  codes.insert({ "LS", "Lesotho" });
  codes.insert({ "LR", "Liberia" });
  codes.insert({ "LY", "Libya" });
  codes.insert({ "LI", "Liechtenstein" });
  codes.insert({ "LT", "Lithuania" });
  codes.insert({ "LU", "Luxembourg" });
  codes.insert({ "MO", "Macau SAR China" });
  codes.insert({ "MK", "Macedonia" });
  codes.insert({ "MG", "Madagascar" });
  codes.insert({ "MW", "Malawi" });
  codes.insert({ "MY", "Malaysia" });
  codes.insert({ "MV", "Maldives" });
  codes.insert({ "ML", "Mali" });
  codes.insert({ "MT", "Malta" });
  codes.insert({ "MH", "Marshall Islands" });
  codes.insert({ "MQ", "Martinique" });
  codes.insert({ "MR", "Mauritania" });
  codes.insert({ "MU", "Mauritius" });
  codes.insert({ "YT", "Mayotte" });
  codes.insert({ "FX", "Metropolitan France" });
  codes.insert({ "MX", "Mexico" });
  codes.insert({ "FM", "Micronesia" });
  codes.insert({ "MI", "Midway Islands" });
  codes.insert({ "MD", "Moldova" });
  codes.insert({ "MC", "Monaco" });
  codes.insert({ "MN", "Mongolia" });
  codes.insert({ "ME", "Montenegro" });
  codes.insert({ "MS", "Montserrat" });
  codes.insert({ "MA", "Morocco" });
  codes.insert({ "MZ", "Mozambique" });
  codes.insert({ "MM", "Myanmar [Burma]" });
  codes.insert({ "NA", "Namibia" });
  codes.insert({ "NR", "Nauru" });
  codes.insert({ "NP", "Nepal" });
  codes.insert({ "NL", "Netherlands" });
  codes.insert({ "AN", "Netherlands Antilles" });
  codes.insert({ "NT", "Neutral Zone" });
  codes.insert({ "NC", "New Caledonia" });
  codes.insert({ "NZ", "New Zealand" });
  codes.insert({ "NI", "Nicaragua" });
  codes.insert({ "NE", "Niger" });
  codes.insert({ "NG", "Nigeria" });
  codes.insert({ "NU", "Niue" });
  codes.insert({ "NF", "Norfolk Island" });
  codes.insert({ "KP", "North Korea" });
  codes.insert({ "VD", "North Vietnam" });
  codes.insert({ "MP", "Northern Mariana Islands" });
  codes.insert({ "NO", "Norway" });
  codes.insert({ "OM", "Oman" });
  codes.insert({ "PC", "Pacific Islands Trust Territory" });
  codes.insert({ "PK", "Pakistan" });
  codes.insert({ "PW", "Palau" });
  codes.insert({ "PS", "Palestinian Territories" });
  codes.insert({ "PA", "Panama" });
  codes.insert({ "PZ", "Panama Canal Zone" });
  codes.insert({ "PG", "Papua New Guinea" });
  codes.insert({ "PY", "Paraguay" });
  codes.insert({ "YD", "People's Democratic Republic of Yemen" });
  codes.insert({ "PE", "Peru" });
  codes.insert({ "PH", "Philippines" });
  codes.insert({ "PN", "Pitcairn Islands" });
  codes.insert({ "PL", "Poland" });
  codes.insert({ "PT", "Portugal" });
  codes.insert({ "PR", "Puerto Rico" });
  codes.insert({ "QA", "Qatar" });
  codes.insert({ "RO", "Romania" });
  codes.insert({ "RU", "Russia" });
  codes.insert({ "RW", "Rwanda" });
  codes.insert({ "RE", "Réunion" });
  codes.insert({ "BL", "Saint Barthélemy" });
  codes.insert({ "SH", "Saint Helena" });
  codes.insert({ "KN", "Saint Kitts and Nevis" });
  codes.insert({ "LC", "Saint Lucia" });
  codes.insert({ "MF", "Saint Martin" });
  codes.insert({ "PM", "Saint Pierre and Miquelon" });
  codes.insert({ "VC", "Saint Vincent and the Grenadines" });
  codes.insert({ "WS", "Samoa" });
  codes.insert({ "SM", "San Marino" });
  codes.insert({ "SA", "Saudi Arabia" });
  codes.insert({ "SN", "Senegal" });
  codes.insert({ "RS", "Serbia" });
  codes.insert({ "CS", "Serbia and Montenegro" });
  codes.insert({ "SC", "Seychelles" });
  codes.insert({ "SL", "Sierra Leone" });
  codes.insert({ "SG", "Singapore" });
  codes.insert({ "SK", "Slovakia" });
  codes.insert({ "SI", "Slovenia" });
  codes.insert({ "SB", "Solomon Islands" });
  codes.insert({ "SO", "Somalia" });
  codes.insert({ "ZA", "South Africa" });
  codes.insert({ "GS", "South Georgia and the South Sandwich Islands" });
  codes.insert({ "KR", "South Korea" });
  codes.insert({ "ES", "Spain" });
  codes.insert({ "LK", "Sri Lanka" });
  codes.insert({ "SD", "Sudan" });
  codes.insert({ "SR", "Suriname" });
  codes.insert({ "SJ", "Svalbard and Jan Mayen" });
  codes.insert({ "SZ", "Swaziland" });
  codes.insert({ "SE", "Sweden" });
  codes.insert({ "CH", "Switzerland" });
  codes.insert({ "SY", "Syria" });
  codes.insert({ "ST", "São Tomé and Príncipe" });
  codes.insert({ "TW", "Taiwan" });
  codes.insert({ "TJ", "Tajikistan" });
  codes.insert({ "TZ", "Tanzania" });
  codes.insert({ "TH", "Thailand" });
  codes.insert({ "TL", "Timor-Leste" });
  codes.insert({ "TG", "Togo" });
  codes.insert({ "TK", "Tokelau" });
  codes.insert({ "TO", "Tonga" });
  codes.insert({ "TT", "Trinidad and Tobago" });
  codes.insert({ "TN", "Tunisia" });
  codes.insert({ "TR", "Turkey" });
  codes.insert({ "TM", "Turkmenistan" });
  codes.insert({ "TC", "Turks and Caicos Islands" });
  codes.insert({ "TV", "Tuvalu" });
  codes.insert({ "UM", "U.S. Minor Outlying Islands" });
  codes.insert({ "PU", "U.S. Miscellaneous Pacific Islands" });
  codes.insert({ "VI", "U.S. Virgin Islands" });
  codes.insert({ "UG", "Uganda" });
  codes.insert({ "UA", "Ukraine" });
  codes.insert({ "SU", "Union of Soviet Socialist Republics" });
  codes.insert({ "AE", "United Arab Emirates" });
  codes.insert({ "GB", "United Kingdom" });
  codes.insert({ "US", "United States" });
  codes.insert({ "ZZ", "Unknown or Invalid Region" });
  codes.insert({ "UY", "Uruguay" });
  codes.insert({ "UZ", "Uzbekistan" });
  codes.insert({ "VU", "Vanuatu" });
  codes.insert({ "VA", "Vatican City" });
  codes.insert({ "VE", "Venezuela" });
  codes.insert({ "VN", "Vietnam" });
  codes.insert({ "WK", "Wake Island" });
  codes.insert({ "WF", "Wallis and Futuna" });
  codes.insert({ "EH", "Western Sahara" });
  codes.insert({ "YE", "Yemen" });
  codes.insert({ "ZM", "Zambia" });
  codes.insert({ "ZW", "Zimbabwe" });
  codes.insert({ "AX", "Åland Islands" });

  StringMap countries;
  for (auto& c : codes) {
    countries.insert( {c.second, c.first});
  }
  return {codes, countries};
}
